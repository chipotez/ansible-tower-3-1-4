---
- hosts: tower
  remote_user: root
  vars:
    - tower_path: /tmp/ansible-tower-last-release
    - tower_admin_pass: admin-password
    - rhn_username: user-rhn
    - rhn_pass: "password-rhn"
    - hostname_full: host-id-rhn
  tasks:
    - name: Registrando Sistema en Portal de Red Hat.
      redhat_subscription:
          state: present
          username: " {{ rhn_username }} " 
          password: "{{ rhn_pass }}"
          consumer_name: "{{ hostname_full }}"
          autosubscribe: true
          force_register: yes

    - name: Habilitando canales necesarios.
      shell: |
        subscription-manager repos --disable=*
        subscription-manager repos --enable rhel-7-server-rpms --enable rhel-7-server-extras-rpms --enable rhel-7-server-optional-rpms
        
    - name: Actualizando Sistema Operativo
      yum:
        name: '*'
        state: latest
        
    - name: "Limpiando metadata de los repositorios."
      command: "yum clean all"

    - name: reboot nodes
      shell: sleep 2 && shutdown -r now "Ansible reboot"
      async: 1
      poll: 0
      ignore_errors: true

    - name: wait for server to come back
      local_action: wait_for
      args:
        host: "{{ inventory_hostname }}"
        port: 22
        state: started
        delay: 30
        timeout: 60

    - name: Descargando Ansible Tower.
      get_url:
        url: https://releases.ansible.com/ansible-tower/setup-bundle/ansible-tower-setup-bundle-latest.el7.tar.gz
        dest: /tmp

    - file:
        path: /tmp/paqueton
        state: directory

    - name: Extrayendo Ansible Tower.
      unarchive:
        src: /tmp/ansible-tower-setup-bundle-latest.el7.tar.gz 
        dest: /tmp/paqueton
        remote_src: yes
      register: tar_reg

    - name: Instalando Tower.
      shell: mv * /tmp/ansible-tower-last-release
      args:
        chdir: /tmp/paqueton

    - name: Configurando Password Admin.
      lineinfile: 
        dest: "{{ tower_path }}/inventory"
        regexp: admin_password
        line: "admin_password='{{ tower_admin_pass }}'"

    - name: Configurando Password Rabbitmq.
      lineinfile:
        dest: "{{ tower_path }}/inventory"
        regexp: rabbitmq_password
        line: "rabbitmq_password='{{ tower_admin_pass }}'"

    - name: Configurando Password PG.
      lineinfile:
        dest: "{{ tower_path }}/inventory"
        regexp: pg_password
        line: "pg_password='{{ tower_admin_pass }}'"

    - name: Instalando Tower.
      shell: | 
        ./setup.sh
      args:
        chdir: "{{ tower_path }}"
